package simpleAnimationStarter;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;

public class SimpleAnimationStarter extends JPanel implements ActionListener{
	
	private CircleInfo[] circleData;
	
//  int inset, recWidth, recHeight;      
//  g.setColor(Color.LIGHT_GRAY);
//  g.fillRect(0, 0, width, height);
//  g.setColor(Color.BLACK);        
//  inset = frameNumber % 20;
//  recWidth = width - 2 * inset;
//  recHeight = height - 2 * inset;        
//  while(recWidth >= 0 && recHeight >= 0){
//  	g.drawRect(inset, inset, recWidth, recHeight);
//  	inset += 20;
//  	recWidth -= 40;
//  	recHeight -= 40;
//  }
    public void drawFrame(Graphics g, int frameNumber, int width, int height) {
        if(circleData == null){
        	circleData = new CircleInfo[50];
        	for(int i = 0; i < circleData.length; i++){
        		circleData[i] = new CircleInfo( (int)(width * Math.random()), (int) (height * Math.random()), (int)(50 * Math.random()) );
        	}
        }
        
    	for(int i = 0; i < circleData.length; i++){
    		circleData[i].setRadius(circleData[i].getRadius() + 2);
    		circleData[i].draw(g);
    		if(Math.random() < 0.001 || circleData[i].getRadius() > 100){
    			circleData[i] = new CircleInfo((int)(width * Math.random()), (int) (height * Math.random()), (int)(50 * Math.random()));
    		}
    	}

    }
    
    //------ Implementation details: DO NOT EXPECT TO UNDERSTAND THIS ------
    
    
    public static void main(String[] args) {
        
        /* NOTE:  The string in the following statement goes in the title bar
         * of the window.
         */
        JFrame window = new JFrame("Simple Animation");
        
        /*
         * NOTE: If you change the name of this class, you must change
         * the name of the class in the next line to match!
         */
        SimpleAnimationStarter drawingArea = new SimpleAnimationStarter();
        
        drawingArea.setBackground(Color.WHITE);
        window.setContentPane(drawingArea);

        /* NOTE:  In the next line, the numbers 600 and 450 give the
         * initial width and height of the drawing array.  You can change
         * these numbers to get a different size.
         */
        drawingArea.setPreferredSize(new Dimension(600,450));

        window.pack();
        window.setLocation(100,50);
        window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        
        /*
         * Note:  In the following line, you can change true to
         * false.  This will prevent the user from resizing the window,
         * so you can be sure that the size of the drawing area will
         * not change.  It can be easier to draw the frames if you know
         * the size.
         */
        window.setResizable(true);
        
        /* NOTE:  In the next line, the number 20 gives the time between
         * calls to drawFrame().  The time is given in milliseconds, where
         * one second equals 1000 milliseconds.  You can increase this number
         * to get a slower animation.  You can decrease it somewhat to get a
         * faster animation, but the speed is limited by the time it takes
         * for the computer to draw each frame. 
         */
        Timer frameTimer = new Timer(80 , drawingArea);

        window.setVisible(true);
        frameTimer.start();

    } // end main

    private int frameNum;
    
    public void actionPerformed(ActionEvent evt) {
        frameNum++;
        repaint();
    }
    
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        drawFrame(g, frameNum, getWidth(), getHeight());
    }


}
